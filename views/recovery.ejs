<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
    	<title>Ciao Giove!</title>
	</head>
	<body>
		<h1>Recupero password</h1>
		<p>Captcha? Email di verifica? Riconoscimento facciale? Pfff...</p>
		<p>Noi abbiamo un <strong>robot</strong> in un <strong>labirinto</strong>, e tu ora devi guidarlo. La password è su un foglietto che è stato lasciato in uno dei corridoi. Solo il vero Giove saprà domarlo.</p>
		<p>Corri! Non hai molto tempo.</p>
		<ul>
			<li><a href="robot/state">Stato del robot.</a></li>
			<li><a href="robot/action">Interfaccia di controllo del robot.</a> Da usare con il parametro GET <code>?move={up|down|left|right}</code></li>
		</ul>
		<p>Quando il robot passa sopra ad un foglietto lo legge e carica il testo in memoria.</p>
		<p>Prima di morire (dopo 24 ore il computer esplode, sai...), l'ultimo sventurato stava utilizzando questo codice:</p>
<pre>
#!/usr/bin/env python
# -*- coding: utf-8 -*-

import requests
import random
import time

state_url = "https://giove.herokuapp.com/robot/state"
action_url = "https://giove.herokuapp.com/robot/action"
session = requests.session()
errors = False
state = {}

def get_state():
	print "Get state"
	try:
		res = session.get(state_url)
		if res.status_code == 200:
			return res.json()
		else:
			print "Error HTTP {0} {1}".format(res.status_code, res.text)
			errors = True
	except requests.ConnectionError as e:
		print "Error at get_state. {0}".format(e)
		errors = True
	return {}

def send_move(direction):
	print "Send move:", direction
	try:
		res = session.get(action_url, params={"move": direction})
		if res.status_code == 200:
			print res.text
		else:
			print "Error HTTP {0} {1}".format(res.status_code, res.text)
			errors = True
	except requests.exceptions.RequestException as e:
		print "Error at send_move. {0}".format(e)
		errors = True

### MAIN ###

state = get_state()
while not errors:
	# Move
	direction = random.choice(["left", "right", "up", "down"])
	send_move(direction)
	
	# Read state
	state = get_state()
	print "Position: ({0}, {1})".format(
		state["robot"]["position"]["x"],
		state["robot"]["position"]["y"]
	)
	print "Memory: {0}".format(state["robot"]["memory"])
	
	# Wait
	time.sleep(100)
</pre>
	</body>
</html>
